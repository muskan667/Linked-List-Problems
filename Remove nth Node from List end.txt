Given a linked list, remove the nth node from the end of list and return its head.

For example,
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::removeNthFromEnd(ListNode* A, int B) {
    ListNode *curr=A;
    ListNode *temp=A;
    ListNode *keep;
    int count=0;
    
    while(curr->next!=NULL)
    {
        curr=curr->next;
        count++;
    }
    if(B>count)
    {
        A=A->next;
        return A;
    }
    int m=count-B;
    while(m>0)
    {
       temp=temp->next;
       m--;
    }
    keep=temp->next;
    temp->next=temp->next->next;
    free(keep);
    return A;
}
